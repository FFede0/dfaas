#!/usr/bin/env ansible-playbook
---
- hosts: faasnodes

  vars:
    pip_install_packages:
      - name: docker
    docker_users:
      - debian
    dfaas_functions: ["a", "b", "c"]

  tasks:
    - name: Copy the files needed to build and deploy the functions
      synchronize:
        # Trailing slash required! See http://qdosmsq.dunbar-it.co.uk/blog/2013/02/rsync-to-slash-or-not-to-slash/
        src: "{{playbook_dir}}/../example-functions/"
        dest: "/home/debian/example-functions"
        perms: no # Do not preserve permissions (since we may run this playbook from WSL on Windows, hence permissions are rwx for everyone)
        delete: yes

    - name: Replace func[bc]/handler.go with funca/handler.go
      copy:
        remote_src: yes
        src: /home/debian/example-functions/funca/handler.go
        dest: /home/debian/example-functions/func{{item}}/handler.go
      loop: ["b", "c"]

    - name: Insert node number into the functions' code
      replace:
        path: /home/debian/example-functions/func{{item}}/handler.go
        regexp: "0 // ###NODENUM###"
        replace: "{{dfaas_node_id | string}}"
      loop: "{{dfaas_functions}}"

    - name: Insert node name into the functions' code
      replace:
        path: /home/debian/example-functions/func{{item}}/handler.go
        regexp: '"###NODENAME###"'
        replace: '"{{ansible_host}}"'
      loop: "{{dfaas_functions}}"

    - name: Insert function name into the functions' code
      replace:
        path: /home/debian/example-functions/func{{item}}/handler.go
        regexp: '"###FUNCNAME###"'
        replace: '"{{item | upper}}"'
      loop: "{{dfaas_functions}}"

    - name: Build the functions
      shell:
        chdir: /home/debian/example-functions
        cmd: faas-cli build --yaml func{{item}}.yml
      loop: "{{dfaas_functions}}"

    - name: Deploy the functions
      shell:
        chdir: /home/debian/example-functions
        cmd: faas-cli deploy --yaml func{{item}}.yml --label dfaas.maxrate={{dfaas_node_id}}0
        # {{[item] | map('extract', {'a':1, 'b':2, 'c':3}) | first}}
      loop: "{{dfaas_functions}}"
