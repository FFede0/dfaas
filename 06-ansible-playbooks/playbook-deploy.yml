#!/usr/bin/env ansible-playbook
---
- hosts: dfaasctrl

  vars:
    dfaas_nodes: [1, 2, 3]

  tasks:
    - name: Copy the dfaasagent things
      synchronize:
        # Trailing slash required! See http://qdosmsq.dunbar-it.co.uk/blog/2013/02/rsync-to-slash-or-not-to-slash/
        src: "{{playbook_dir}}/../dfaasagent/"
        dest: "/home/debian/dfaasagent"
        perms: no # Do not preserve permissions (since we may run this playbook from WSL on Windows, hence permissions are rwx for everyone)
        delete: yes
        rsync_opts:
          - "--exclude=dfaasagent"
          - "--exclude=dfaasagent.exe"
          - "--exclude=haproxy.cfg"
          - "--exclude=prvkey.dat"
          - "--exclude=.gitignore"

    - name: Build the dfaasagent executable
      shell:
        chdir: /home/debian/dfaasagent
        cmd: /usr/local/go/bin/go build

    - name: DFaaSAgent Docker image build
      docker_image:
        source: build
        build:
          path: /home/debian/dfaasagent
          pull: no # Do not download any updates to the FROM image in Dockerfile
        force_source: yes # Force build even if the image already exists
        name: dfaasagent

    - name: Recursively remove the dfaasagent directory
      file:
        path: /home/debian/dfaasagent
        state: absent

    - name: DFaaSAgent Docker containers
      docker_container:
        name: agent{{item}}
        image: dfaasagent
        restart_policy: always
        keep_volumes: no # Do not retain **anonymous** volumes when the container is removed

        network_mode: "container:node{{item}}"
        volumes:
          - /home/debian/dfaasvolume{{item}}:/dfaasvolume
          - /home/debian/agents-private-keys/prvkey-for-agent{{item}}.dat:/prvkey.dat:ro
          - /var/run/docker.sock:/var/run/docker.sock
          - /etc/timezone:/etc/timezone:ro
          - /etc/localtime:/etc/localtime:ro
        # Custom weights are 11, 22, 33
        # Each node uses kademlia to bootstrap on all the nodes. Of course, each
        # node fails dialing itself, but actually this is not a problem, because
        # they won't halt
        # --recalc-period: it is advised to not go below 10s, to avoid problems with Prometheus
        command: >
          --listen /ip4/192.168.30.10{{item}}/tcp/6000
          --prvkey /prvkey.dat
          --bootstrap-nodes list:/ip4/192.168.30.101/tcp/6000/p2p/QmUb2Rxy3oV7ZsENnkSG3nZDQySEaymzuxKxWQJE9Fu3Qb,/ip4/192.168.30.102/tcp/6000/p2p/QmVaHQKEvZfkgPU5Bf7wVy5F9TRT1BzQMHeFBC7dZFrYkR,/ip4/192.168.30.103/tcp/6000/p2p/QmTbLEbrDn41dTaYk6tUFTAKa5hHiAm3n96tBAfNBmHt4Z
          --debug
          --colors
          --recalc-period 1m
          --haconfig /dfaasvolume/haproxy.cfg
          --haconfig-update-command "docker kill -s SIGHUP haproxy{{item}}"
          --haproxy-host node{{item}}
          --haproxy-port 80
          --hasock-path unix:///dfaasvolume/haproxy.sock
          --openfaas-host 192.168.15.10{{item}}
          --openfaas-pass faaspass2020
          --prometheus-host 192.168.15.10{{item}}
        # Vecchio approccio (non funzionante): --bootstrap-nodes list:{{dfaas_nodes | difference([item]) | map('regex_replace', '(.*)', '/ip4/192.168.30.10\1/tcp/6000/p2p/any') | join(',')}}
        state: started
        #recreate: yes # Forces recreation of the container
        restart: yes # Forces restart of the container
      loop: "{{dfaas_nodes}}"
